#version 460

layout(local_size_x = 16, local_size_y = 8, local_size_z = 1) in;

layout(binding = 0, set = 0, rgba32f) uniform image2D storageImage; // Storage image

void main()
{
    // The resolution of the buffer, which in this case is a hardcoded vector
    // of 2 unsigned integers:
    const uvec2 resolution = uvec2(800, 600);

    // Get the coordinates of the pixel for this invocation:
    //
    // .-------.-> x
    // |       |
    // |       |
    // '-------'
    // v
    // y
    const uvec2 pixel = gl_GlobalInvocationID.xy;

    // If the pixel is outside of the image, don't do anything:
    if((pixel.x >= resolution.x) || (pixel.y >= resolution.y))
    {
        return;
    }

    // Create a vector of 3 floats with a different color per pixel.
    const vec4 pixelColor = vec4(float(pixel.x) / resolution.x,  // Red
                                float(pixel.y) / resolution.y,  // Green
                                0.0,                            // Blue
                                1.0);                           // Alpha

    imageStore(storageImage, ivec2(pixel), pixelColor);
}